---
- name: configure developer environment
  hosts: localhost
  become: yes
  connection: local
  vars:
    home: "{{ lookup('env','HOME') }}"
    user: "{{ lookup('env','USER') }}"
    githome: "{{ home }}/git/config_files"
  remote_user: '{{ user }}'

  tasks:
  - name: install zypper packages
    zypper: name={{item}} state=latest
    when: ansible_distribution == "openSUSE Leap"
    with_items:
    - autoconf
    - automake
    - babeltrace-devel
    - bcc-tools
    - ceph
    - clang
    - cmake
    - cscope
    - ctags
    - cunit-devel
    - crash
    - coccinelle
    - curl
    - dhcp-tools
    - exfat-utils
    - flatpak
    - fuse-devel
    - fuse-exfat
    - git
    - git-email
    - gcc
    - gcc-c++
    - gdb
    - gperf
    - htop
    - iotop
    - jemalloc-devel
    - kernel-source
    - keyutils-devel
    - krb5-devel
    - leveldb-devel
    - libaio-devel
    - libblkid-devel
    - libcurl-devel
    - libexpat-devel
    - liblz4-devel
    - liboath-devel
    - libopenssl-devel
    - librados-devel
    - libradosstriper-devel
    - libudev-devel
    - libvirt-devel
    - linuxconsoletools
    - ltrace
    - lttng-ust-devel
    - make
    - man-pages
    - meson
    - mozilla-nss-devel
    - mtr
    - mutt
    - nvme-cli
    - ncurses-devel
    - openldap2-devel
    - pciutils
    - powerline-fonts
    - python-devel
    - python-pip
    - python-sphinx
    - python2-Cython
    - python2-numpy-devel
    - python3-Cython
    - python3-devel
    - qemu
    - quilt
    - rdma-core-devel
    - rpmdevtools
    - snappy-devel
    - strace
    - sysstat
    - tcpdump
    - texlive-xetex
    - tmux
    - unzip
    - valgrind
    - vim
    - virt-manager
    - virt-viewer
    - youtube-dl
    - wget
    - zsh

  - name: install pip modules
    pip: name={{ item }}
    with_items:
      - distro
      - powerline-status
      - netifaces
      - thefuck
      - ipython
    become: no

  - name: download oh-my-zsh
    get_url:
      owner: '{{ user }}'
      mode: 0550
      url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
      dest: '/tmp/zsh.sh'

  - name: install oh-my-zsh
    sudo: no
    shell: /tmp/zsh.sh

  - name: create home git directory
    file:
      state: directory
      path: '{{ home }}/{{ item }}'
      owner: '{{ user }}'
    with_items:
      - git
      - .vim/autoload
      - .config/powerline/themes/tmux
      - .config/powerline/themes/vim

  - name: clone config_files repository
    git:
      repo: 'https://github.com/marcosps/config_files'
      dest: '{{ githome }}'
    become: no

  - name: install config_file files
    file:
      src: '{{ githome }}/configs/{{ item.src }}'
      dest: '{{ home }}/{{ item.dest }}'
      state: link
      force: yes
      owner: '{{ user }}'
    with_items:
      - { src: 'gitconfig', dest: '.gitconfig' }
      - { src: 'gitconfig.prof', dest: '.gitconfig.prof' }
      - { src: 'muttrc', dest: '.muttrc' }
      - { src: 'tmux.conf', dest: '.tmux.conf' }
      - { src: 'vimrc', dest: '.vim/vimrc' }
      - { src: 'zshrc', dest: '.zshrc' }
      - { src: 'tmux_default.json', dest: '.config/powerline/themes/tmux/default.json' }
      - { src: 'vim_default.json', dest: '.config/powerline/themes/vim/default.json' }

  - name: create etc directories
    file:
      state: directory
      path: '/etc/{{ item }}'
      force: yes
    with_items:
      - sysctl.d
      - gdbinit.d

  - name: copy etc files
    copy:
      src: '{{ githome }}/configs/{{ item.src }}'
      dest: '/etc/{{ item.dest }}'
      force: yes
    with_items:
      - { src: 'kernel.conf', dest: 'sysctl.d/kernel.conf' }
      - { src: 'default.gdb', dest: 'gdbinit.d/default.gdb' }

  - name: download vimplug
    get_url:
      owner: '{{ user }}'
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: '{{ home }}/.vim/autoload/plug.vim'

  - name: download antigen
    get_url:
      owner: '{{ user }}'
      url: https://raw.githubusercontent.com/zsh-users/antigen/master/bin/antigen.zsh
      dest: '{{ home }}/.antigen.zsh'

  - name: create .signature files (for mutt)
    copy:
      dest: '{{ home }}/.signature'
      owner: '{{ user }}'
      content: |
        Thanks,
        Marcos
